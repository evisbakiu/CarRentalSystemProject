@{
    ViewBag.Title = "Admin Dashboard";
}

<h2>Admin Dashboard</h2>

<div>
    <a asp-action="Cars" class="btn btn-primary">Manage Cars</a>
    <a asp-action="Reservations" class="btn btn-primary">Manage Reservations</a>
    <a asp-action="Users" class="btn btn-primary">Manage Users</a>
    <a asp-action="Reports" class="btn btn-primary">Generate Reports</a>
</div>
<br />

    <!-- Summary Statistics Row -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <h5 class="card-title">Car Availability</h5>
                    <div class="d-flex justify-content-between">
                        <div>
                            <h2 id="availableCars">-</h2>
                            <p class="mb-0">Cars Available</p>
                        </div>
                        <div>
                            <h2 id="totalCars">-</h2>
                            <p class="mb-0">Total Cars</p>
                        </div>
                    </div>
                    <div class="progress mt-3 bg-light">
                        <div id="availabilityProgress" class="progress-bar bg-success" role="progressbar" style="width: 0%"></div>
                    </div>
                    <p class="mt-2 mb-0"><span id="availabilityRate">0</span>% Availability Rate</p>
                </div>
            </div>
        </div>
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5>Rezervimet Sipas Muajve</h5>
            </div>
            <div class="card-body">
                <canvas id="reservationsChart" height="120"></canvas>
            </div>
        </div>
    </div>
    </div>

    <!-- Charts Row -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>Fleet Distribution by Fuel Type</h5>
                </div>
                <div class="card-body">
                    <canvas id="fuelTypeChart" height="260"></canvas>
                </div>
            </div>
        </div>

<!-- Date Range Filter -->
<div class="card mb-4">
    <div class="card-header">
        <h5>Filter Reservations</h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="startDate">Start Date</label>
                    <input type="date" id="startDate" class="form-control" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="endDate">End Date</label>
                    <input type="date" id="endDate" class="form-control" />
                </div>
            </div>
            <div class="col-md-4 d-flex align-items-end">
                <button id="filterBtn" class="btn btn-primary">Apply Filter</button>
            </div>
        </div>
    </div>
</div>

    <!-- Recent Reservations -->
    <div class="card mb-4">
        <div class="card-header">
            <h5>Recent Reservations</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped" id="reservationsTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Car</th>
                            <th>License Plate</th>
                            <th>Customer</th>
                            <th>Email</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Duration</th>
                            <th>Total Cost</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Helper function to format currency
        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(amount);
        }

        // Helper function to format dates
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });
        }

        // Set default date range to current month
        function setDefaultDateRange() {
            const today = new Date();
            const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);
            const lastDay = new Date(today.getFullYear(), today.getMonth() + 1, 0);

            document.getElementById('startDate').valueAsDate = firstDay;
            document.getElementById('endDate').valueAsDate = lastDay;
        }

        // Charts
        let durationChart, carClassChart, fuelTypeChart;

        // Load all dashboard data
        function loadDashboardData() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            // Load reservation details
            fetch(`/Admin/GetReservationDetails?startDate=${startDate}&endDate=${endDate}`)
                .then(response => response.json())
                .then(data => {
                    const tableBody = document.querySelector('#reservationsTable tbody');
                    tableBody.innerHTML = '';

                    data.data.forEach(reservation => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${reservation.id}</td>
                            <td>${reservation.carName}</td>
                            <td>${reservation.carLicensePlate}</td>
                            <td>${reservation.userName}</td>
                            <td>${reservation.userEmail}</td>
                            <td>${formatDate(reservation.startDate)}</td>
                            <td>${formatDate(reservation.endDate)}</td>
                            <td>${reservation.durationDays} days</td>
                            <td>${formatCurrency(reservation.totalCost)}</td>
                            <td><span class="badge ${reservation.status === 'Completed' ? 'bg-success' : reservation.status === 'Cancelled' ? 'bg-danger' : 'bg-warning'}">${reservation.status}</span></td>
                        `;
                        tableBody.appendChild(row);
                    });
                });

            // Load car availability rate
            fetch('/Admin/GetCarAvailabilityRate')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('availableCars').textContent = data.availableCars;
                    document.getElementById('totalCars').textContent = data.totalCars;
                    document.getElementById('availabilityRate').textContent = data.availabilityRate;

                    const progressBar = document.getElementById('availabilityProgress');
                    progressBar.style.width = `${data.availabilityRate}%`;
                });

        // Declare the chart variable at the top of your script section
        let reservationsChart = null;

        // Then in your loadDashboardData function:
        fetch('/Admin/GetReservationsByMonth')
            .then(response => response.json())
            .then(data => {
                const ctx = document.getElementById('reservationsChart').getContext('2d');

                // Destroy previous chart if it exists
                if (reservationsChart) {
                    reservationsChart.destroy();
                }

                const labels = data.map(item => item.month);
                const counts = data.map(item => item.reservationCount);

                reservationsChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Numri i Rezervimeve',
                            data: counts,
                            backgroundColor: 'rgba(54, 162, 235, 0.7)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Numri i Rezervimeve'
                                }
                            }
                        }
                    }
                });
            });

            // Load fuel type distribution
            fetch('/Admin/GetFuelTypeDistribution')
                .then(response => response.json())
                .then(data => {
                    if (fuelTypeChart) {
                        fuelTypeChart.destroy();
                    }

                    const labels = data.map(item => item.fuelType);
                    const counts = data.map(item => item.count);

                    // Generate colors based on number of fuel types
                    const backgroundColors = [
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(54, 162, 235, 0.7)',
                        'rgba(255, 206, 86, 0.7)',
                        'rgba(75, 192, 192, 0.7)',
                        'rgba(153, 102, 255, 0.7)',
                        'rgba(255, 159, 64, 0.7)',
                        'rgba(199, 199, 199, 0.7)'
                    ];

                    const ctx = document.getElementById('fuelTypeChart').getContext('2d');
                    fuelTypeChart = new Chart(ctx, {
                        type: 'doughnut',
                        data: {
                            labels: labels,
                            datasets: [{
                                data: counts,
                                backgroundColor: backgroundColors.slice(0, labels.length),
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    position: 'right'
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            const label = context.label || '';
                                            const value = context.raw || 0;
                                            const total = context.dataset.data.reduce((acc, val) => acc + val, 0);
                                            const percentage = Math.round((value / total) * 100);
                                            return `${label}: ${value} (${percentage}%)`;
                                        }
                                    }
                                }
                            }
                        }
                    });
                });
        }

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            setDefaultDateRange();
            loadDashboardData();

            // Set up filter button
            document.getElementById('filterBtn').addEventListener('click', loadDashboardData);
        });
    </script>
    }
<style>
    .chart-container {
        width: 100% !important;
        height: 100% !important;
        min-height: 300px;
    }

    #fuelTypeChart {
        width: 100% !important;
        height: 100% !important;
        display: block;
    }
</style>